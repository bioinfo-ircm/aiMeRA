% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ab.mra.R
\name{ab.mra}
\alias{ab.mra}
\title{Inference of a double perturbation outcome from a connectivity network created with MRA.}
\usage{
ab.mra(data,matp,pred=NULL,pert1,pert2,inval=c(-1,1),step=0.1,Rp=FALSE,ab=TRUE)
}
\arguments{
\item{data}{A data frame containing the experimental data in the specific format for MRA calculations.}

\item{matp}{The perturbation matrix. Names of modules (rows) and perturbations (columns) must correspond to names of rows
and columns in tab.}

\item{pred}{String. Name of the double perturbation to be inferred if the experimental values of such perturbation
for al modules are given as reference in ```data```. Default is NULL.}

\item{pert1}{String. Name of the first individual peturbation.}

\item{pert2}{String. Name of the second individual perturbation.}

\item{inval}{A two values vector given the lower and the upper limit of the interval of the a and b coefficients
for the ab.mra calculation (See details).}

\item{step}{Number. Increment of the sequence within the interval for the a and b coefficients.}

\item{Rp}{Logical. TRUE if ```data``` is the calcuated global response matrix. Default is FALSE}

\item{ab}{Logical. If TRUE then the inferred values of a double perturbation are obtained
by using the a and b coefficients as defined for the ab.mra calculation. If ab=FALSE then
a=1 and b=1 (See details).}
}
\value{
A list containing: If ```pert``` is provided and ```ab=TRUE``` then the inferred value, the refrence data
and the values for the a and b coefficients are returned. If ```pert``` is provided and ```ab=FALSE``` then the inferred and
the reference values are returned. If ```pert``` is not provided then only the inferred values are returned. This
will produce a warning message suggesting that the inferred values must be validated by experimental data.
}
\description{
This function first calculates the connectivity map of a network containing biological
modules and perturbation as specified in the perturbation matrix. Then, it infers the output
of combining two perturbations used in the construction of the MRA model.
}
\details{
The ab.MRA inference is based on the hypothesis that it is possible to infer experimental values for
the combination of two perturbations used for the classical MRA calculation of the connectivity of a network. The hypothesis
is that by including the two local responses of two perturbations into a new system for which the network
connectivity is known then it is possible to infer the values of a double perturbation for all the biological
modules in the network.

Two coefficients (a and b) that ponderate the local responses to perturbations (local_matrix) indicate
whether the effect of the combined perturbations remains equal as their individual effect (a=1 and b=1), or it is attenuated (abs(a)<1 and abs(b)<1)
or amplified (abs(a)>1 and abs(b)>1). The a, b coefficients are coefficients that minimize the euclidian
distance between the infered values and the reference experimental values of all modules.
}
\examples{
#Inferrence of a double perturbation by two siRNAs (siRIP140 and siLCoR)
#in a E2 stimulated biological condition of the ERa-RIP140-LCoR network.
data=data.setup(list(estr1_A,estr1_B,estr2_A,estr2_B,estr3_A,estr3_B))
data.mean=data2sdmean(data)$mean
rules=c("Et->Luciferase","E2+siRIP140->RIP140","E2+siLCoR->LCoR","E2->0")
matp=read.rules(rules)
#Inferrence with the experimental value of reference and without the a and b coefficients
ab.mra(data.mean,matp=matp,pred="E2+siLCoR+siRIP140",pert1="E2+siLCoR",
       pert2="E2+siRIP140",ab=FALSE)
#Inferrence with the experimental value of reference and the a and b coefficients
ab.mra(data.mean,matp=matp,pred="E2+siLCoR+siRIP140",pert1="E2+siLCoR",
       pert2="E2+siRIP140")
#Inferrence without the expeimental value of reference and without the a and b coefficients.
ab.mra(data.mean,matp=matp,pred="E2+siLCoR+siRIP140",pert1="E2+siLCoR",
       pert2="E2+siRIP140")

#Inferrence of a biological module (GREB1) without the a,b coefficients,
#which does not have an individual perturbation
data=data.setup(list(estr1_A,estr1_B,estr2_A,estr2_B,estr3_A,estr3_B))
data.mean=data2sdmean(data)$mean
rules=c("Et->Luciferase","E2+siRIP140->RIP140","E2+siLCoR->LCoR","E2->0","0->GREB1")
ab.mra(data.mean,matp=matp,pred="E2+siLCoR+siRIP140",pert1="E2+siLCoR",pert2="E2+siRIP140",
      ab=FALSE)
}
